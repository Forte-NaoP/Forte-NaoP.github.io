

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://forte-naop.github.io/</id>
  <title>Forte's Notes</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-02-02T18:13:39+09:00</updated>
  <author>
    <name>Forte</name>
    <uri>https://forte-naop.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://forte-naop.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://forte-naop.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Forte </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>게임 보드 관련 잡설</title>
    <link href="https://forte-naop.github.io/posts/Bot_note_3/" rel="alternate" type="text/html" title="게임 보드 관련 잡설" />
    <published>2025-02-02T18:09:53+09:00</published>
  
    <updated>2025-02-02T18:09:53+09:00</updated>
  
    <id>https://forte-naop.github.io/posts/Bot_note_3/</id>
    <content type="text/html" src="https://forte-naop.github.io/posts/Bot_note_3/" />
    <author>
      <name>Forte</name>
    </author>

  
    
    <category term="Project" />
    
    <category term="Discord_Bot" />
    
  

  <summary>점수판과 재생 정보는 board.rs에서 다룸
register_channel.rs에서 등록한 텍스트 채널에
스레드 생성후 점수판과 재생 정보 embed를 갱신하는 방식

고려사항

  text channel 등록없이 play 하는 경우
  …




24-05-22

현재 board와 guild_queue가 분리되어 있어 트랙 이벤트가 발생할 때 board에 접근하기 불편함.

두 기능은 같이 동작하므로 결합시킬 예정

GuildQueue와 Board를 합치는 과정중
pub async fn register_channel(&amp;amp;amp;self, channel: GuildChannel) {
    let mut inner = self.inner.lock();
    let channel_id = channel...</summary>

  </entry>

  
  <entry>
    <title>음성 관련</title>
    <link href="https://forte-naop.github.io/posts/Bot_note_2/" rel="alternate" type="text/html" title="음성 관련" />
    <published>2025-02-02T18:06:00+09:00</published>
  
    <updated>2025-02-02T18:06:00+09:00</updated>
  
    <id>https://forte-naop.github.io/posts/Bot_note_2/</id>
    <content type="text/html" src="https://forte-naop.github.io/posts/Bot_note_2/" />
    <author>
      <name>Forte</name>
    </author>

  
    
    <category term="Project" />
    
    <category term="Discord_Bot" />
    
  

  <summary>구버전에서 dca라고 명명한 ogg packet을 이어붙인 자체 포맷대신 symphonia crate를 사용해 음성 바이트 스트림을 생성함.
Input::Lazy 의 Flow
YoutubeDl::into() 
    YoutubeDl::create_async (Compose trait 구현 사항)
        HttpRequest::create_async (Compose trait 구현 사항)
            HttpRequest::create_stream
                reqwest::Client::get -&amp;amp;gt; reqwest::Response
                reqwest::Response::bytes_stream -&amp;amp;gt; Box&amp;amp;lt;tokio_io::Str...</summary>

  </entry>

  
  <entry>
    <title>Rust 동시성 문제</title>
    <link href="https://forte-naop.github.io/posts/Bot_note_1/" rel="alternate" type="text/html" title="Rust 동시성 문제" />
    <published>2025-02-02T17:57:07+09:00</published>
  
    <updated>2025-02-02T17:57:07+09:00</updated>
  
    <id>https://forte-naop.github.io/posts/Bot_note_1/</id>
    <content type="text/html" src="https://forte-naop.github.io/posts/Bot_note_1/" />
    <author>
      <name>Forte</name>
    </author>

  
    
    <category term="Project" />
    
    <category term="Discord_Bot" />
    
  

  <summary>std::process::Stdio::piped() 는 새로운 파이프를 생성한다. std::process::Command::stdin(Stdio::piped()) 같은 식으로 사용하면 stdin이 생성된 파이프로 대체 되는 식.
CommandObject.stdin.take().unwrap()으로 해당 파이프 디스크립터를 가져올 수 있다.
  
  
    Command::spawn()으로 생성된 Child 객체는 wait[_with_output]나 kill 호출 전까지 완료/종료되지 않는다.
만약 파일을 저장하는 작업 이후 연속해서 다른 Command 가 그 파일을 읽으려 한다면 파일이 생성되지 않아 정상적으로 작동하지 않는다. 버퍼 관련 문제인듯
따라서 wait 를 사용해 프로세스를 기다리면 파일이 ...</summary>

  </entry>

  
  <entry>
    <title>고정 크기 Heap 구현</title>
    <link href="https://forte-naop.github.io/posts/Heap_with_Array/" rel="alternate" type="text/html" title="고정 크기 Heap 구현" />
    <published>2025-01-31T07:49:01+09:00</published>
  
    <updated>2025-01-31T07:49:01+09:00</updated>
  
    <id>https://forte-naop.github.io/posts/Heap_with_Array/</id>
    <content type="text/html" src="https://forte-naop.github.io/posts/Heap_with_Array/" />
    <author>
      <name>Forte</name>
    </author>

  
    
    <category term="Study" />
    
    <category term="Algorithm" />
    
  

  <summary>힙(Heap)
완전 이진 트리(Complete Binary Tree) 기반의 자료구조  
최댓값 또는 최솟값을 빠르게 접근 및 관리하는 데 사용된다.



1. 힙의 종류

🔹 최대 힙 (Max Heap)


  부모 노드는 항상 자식보다 크거나 같음
  루트 노드에는 가장 큰 값이 위치함
  삽입(push)과 삭제(pop) 후에도 이 속성이 유지됨


✅ 예시 (최대 힙)

        50
       /  \
     30    40
    /  \   /
   10  20 35



  top()을 하면 50이 반환됨
  pop()을 하면 50이 제거되고, 힙 속성이 유지됨


🔹 최소 힙 (Min Heap)


  부모 노드는 항상 자식보다 작거나 같음
  루트 노드에는 가장 작은 값이 위치...</summary>

  </entry>

  
  <entry>
    <title>Jekyll 시행 착오들 정리</title>
    <link href="https://forte-naop.github.io/posts/Trial_Error/" rel="alternate" type="text/html" title="Jekyll 시행 착오들 정리" />
    <published>2025-01-30T14:57:40+09:00</published>
  
    <updated>2025-01-30T14:57:40+09:00</updated>
  
    <id>https://forte-naop.github.io/posts/Trial_Error/</id>
    <content type="text/html" src="https://forte-naop.github.io/posts/Trial_Error/" />
    <author>
      <name>Forte</name>
    </author>

  
    
    <category term="Blogging" />
    
  

  <summary>Github Pages 시행착오들


  링크는 https:// 로 시작해야 htmlproofer 검사에서 오류가 나지 않음
  
    markdown 문서에서 상대경로로 포함된 리소스는 절대 경로로 변환해줘야 함.

     {% assign remote_url = &amp;quot;https://raw.githubusercontent.com/Forte-NaoP/Note/main/study/Unreal/lecture.md&amp;quot; %}
 {% assign img_url = remote_url | remove: &amp;quot;lecture.md&amp;quot; | append: &amp;quot;capture/&amp;quot; %}

 {% capture remote_content %} &amp;amp;lt;!--remote_content 변수에 remote resource 저장 --&amp;amp;gt;
...</summary>

  </entry>

</feed>


